{"version":3,"file":"log.js","sourceRoot":"","sources":["../../src/utils/log.ts"],"names":[],"mappings":";;;;;AAAA,4CAAoB;AACpB,oDAA4B;AAC5B,2CAA4C;AAM3C,CAAC;AAEF,MAAM,GAAG;IACE,MAAM,CAAC,aAAa,CAAC,QAAgB,EAAE,aAAqB,IAAI,EAAE,WAAwB,IAAI;QACjG,MAAM,cAAc,GAAG,yBAAyB,EAC5C,OAAO,GAAG,yBAAa,GAAG,MAAM,EAChC,OAAO,GAAG,OAAO,GAAG,gBAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,EAC1D,YAAY,GAAG,QAAQ,GAAG,gBAAM,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI;cAC1D,WAAW,GAAG,QAAQ,GAAG,IAAI;cAC7B,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,GAAG,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;cACjD,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI;kBAC5C,OAAO,GAAG,QAAQ,CAAC,GAAG,GAAG,IAAI;kBAC7B,cAAc,GAAG,QAAQ,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAErE,IAAI,CAAC,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YACzB,YAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzB;QAED,YAAE,CAAC,UAAU,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,GAAG,EAAE,EAAE;YACzC,IAAI,GAAG,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,gBAAM,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;aAC5E;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAED,kBAAe,GAAG,CAAC","sourcesContent":["import fs from 'fs';\r\nimport moment from 'moment';\r\nimport { LOGS_BASE_DIR } from './constants';\r\n\r\ninterface HttpLogData {\r\n    method: string;\r\n    url: string;\r\n    statusCode: number;\r\n};\r\n\r\nclass Log {\r\n    public static createFileLog(errorMsg: string, errorStack: string = null, httpData: HttpLogData = null) {\r\n        const dateTimeFormat = 'DD/MM/YYYY HH:mm:ss.SSS',\r\n            logsDir = LOGS_BASE_DIR + 'app/',\r\n            logFile = logsDir + moment().format('DD_MM_YYYY') + '.log',\r\n            errorMessage = 'Date: ' + moment().format(dateTimeFormat) + '\\n'\r\n                + 'Message: ' + errorMsg + '\\n'\r\n                + (errorStack ? 'Stack: ' + errorStack + '\\n' : '')\r\n                + (httpData ? ('Method: ' + httpData.method + '\\n'\r\n                    + 'Url: ' + httpData.url + '\\n'\r\n                    + 'StatusCode: ' + httpData.statusCode + '\\n\\n') : '\\n');\r\n\r\n        if (!fs.existsSync(logsDir)) {\r\n            fs.mkdirSync(logsDir);\r\n        }\r\n\r\n        fs.appendFile(logFile, errorMessage, (err) => {\r\n            if (err) {\r\n                console.log('[' + moment().format(dateTimeFormat) + '] ' + err + '\\n\\n');\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default Log;"]}