{"version":3,"file":"authentication.js","sourceRoot":"","sources":["../../src/controllers/authentication.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport express from 'express';\r\nimport httpStatus from 'http-status';\r\nimport Log from '../utils/log';\r\nimport querystring from 'querystring';\r\nimport { WEB_API } from '../utils/constants';\r\n\r\nconst router = express.Router();\r\n\r\n// #region AUX_FUNCTIONS\r\nfunction getAuthUser(accessToken: string, username: string) {\r\n    return axios({\r\n        method: 'POST',\r\n        url: WEB_API + 'api/Authorization/TruckTracker',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'bearer ' + accessToken\r\n        },\r\n        data: {\r\n            username: username\r\n        }\r\n    });\r\n}\r\n// #endregion\r\n\r\nrouter.post('/SignIn', (req, res) => {\r\n    axios({\r\n        method: 'POST',\r\n        url: WEB_API + 'token',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        data: querystring.stringify({\r\n            grant_type: 'password', // eslint-disable-line @typescript-eslint/camelcase\r\n            username: req.body.username,\r\n            password: req.body.password\r\n        }),\r\n    }).then((tokenRes) => {\r\n        getAuthUser(tokenRes.data.access_token, req.body.username).then((userAuthRes) => {\r\n            (req as any).session.token = tokenRes.data;\r\n            (req as any).session.authUser = userAuthRes.data;\r\n\r\n            res.send(userAuthRes.data);\r\n        }).catch((userErr) => {\r\n            Log.createFileLog(userErr.message,\r\n                userErr.stack,\r\n                userErr.request && userErr.response ? { method: userErr.request.method, url: userErr.request.path, statusCode: userErr.response.status } : null);\r\n\r\n            res.status(userErr.response ? userErr.response.status : httpStatus.INTERNAL_SERVER_ERROR).send();\r\n        });\r\n    }).catch((tokenErr) => {\r\n        Log.createFileLog(tokenErr.message,\r\n            tokenErr.stack,\r\n            tokenErr.request && tokenErr.response ? { method: tokenErr.request.method, url: tokenErr.request.path, statusCode: tokenErr.response.status } : null);\r\n\r\n        res.status(tokenErr.response ? tokenErr.response.status : httpStatus.INTERNAL_SERVER_ERROR).send();\r\n    });\r\n});\r\n\r\nrouter.get('/SignOut', (req, res) => {\r\n    const sessionID = (req as any).sessionID;\r\n\r\n    (req as any).sessionStore.destroy(sessionID, (err) => {\r\n        if (err) {\r\n            Log.createFileLog(err.message, err.stack, { method: req.method, url: req.path, statusCode: httpStatus.INTERNAL_SERVER_ERROR });\r\n            res.status(httpStatus.INTERNAL_SERVER_ERROR).send();\r\n        }\r\n        else {\r\n            res.send();\r\n        }\r\n    });\r\n});\r\n\r\nrouter.get('/Session/User', (req, res) => {\r\n    const authUser = (req as any).session.authUser;\r\n\r\n    if (authUser) {\r\n        res.send(authUser);\r\n    }\r\n    else {\r\n        res.status(httpStatus.NO_CONTENT).send();\r\n    }\r\n});\r\n\r\nexport default router;"]}